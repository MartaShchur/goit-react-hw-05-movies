{"version":3,"file":"static/js/736.b3fc7251.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchActors } from 'services/TmbdApi';\nimport { List, Text } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n    const [movieId] = useParams();\n    const [actors, setActors] = useState([]);\n    const [loadind, setLoading] = useState(false);\n\n    useEffect(() => {\n        const onActorsOfMovie = () => {\n            setLoading(true);\n\n            fetchActors(movieId)\n                .then(actors => {\n                    setActors(actors);\n                })\n                .catch(error => {\n                    console.log(error);\n\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        };\n\n        onActorsOfMovie();\n    }, [movieId]);\n\n    return (\n        <div>\n            {loadind && <Loader />}\n\n            <List>\n                {actors.map(({ id, profile_path, original_name, name, character }) => (\n                    <li key={id}>\n                        <img\n                            width=\"200px\"\n                            src={\n                                profile_path\n                                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                                    : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                            }\n                            alt={original_name}\n                        />\n                        <Text>{name}</Text>\n                        <Text>Character: {character}</Text>\n                    </li>\n                ))}\n            </List>\n        </div>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3c075b4f44a375f4e9b142042cd51419';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","_useParams","useParams","movieId","_slicedToArray","_useState","useState","_useState2","actors","setActors","_useState3","_useState4","loadind","setLoading","useEffect","fetchActors","then","catch","error","console","log","finally","_jsxs","children","_jsx","Loader","map","_ref","id","profile_path","original_name","name","character","width","src","concat","alt","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}