{"version":3,"file":"static/js/736.233c613a.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getCastMovie } from 'services/TmbdApi';\nimport { List, Text } from './Cast.styled';\n// import Loader from 'components/Loader/Loader';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n// const [loading, setLoading] = useState(false);\n  \n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (evt) {\n        console.log(evt);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <List>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <Text key={id}>\n              <img\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </Text>\n          ))}\n        </List>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3c075b4f44a375f4e9b142042cd51419';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","BASE_POSTER_URL","PLACEHOLDER","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_cast","_context","prev","next","getCastMovie","sent","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","map","_ref2","id","profile_path","original_name","character","_jsxs","src","concat","alt","axios","API_KEY","getTrendingMovies","_yield$axios$get","data","abrupt","results","getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}